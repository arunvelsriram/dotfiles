#!/bin/bash

set -e

DIRS_AND_FILES=(zshrc zprofile bashrc bash_profile profile gitconfig gemrc tool-versions tmux.conf.local condarc p10k.zsh oh-my-zsh-custom/plugins oh-my-zsh-custom/themes config/nvim/init.vim config/alacritty/anvim.yml config/alacritty/alacritty.yml config/alacritty/themes gnupg/gpg-agent.conf yabairc skhdrc vimrc)
BACKUP_DIR=~/dotfiles.backup_existing_dotfiles.`date +%-H-%M-%S-%F`

create_directories() {
  mkdir -p $BACKUP_DIR
  mkdir -p $BACKUP_DIR/oh-my-zsh-custom
  mkdir -p $BACKUP_DIR/config/nvim
  mkdir -p $BACKUP_DIR/config/alacritty
  mkdir -p $BACKUP_DIR/gnupg
}

backup_existing_dotfiles() {
  for dir_or_file in ${DIRS_AND_FILES[@]}; do
    full_path=~/.$dir_or_file
    if [[ -f $full_path ]]; then
      cp $full_path $BACKUP_DIR/$dir_or_file
    elif [[ -d $full_path ]]; then
      mkdir -p $full_path
      cp -R $full_path/ $BACKUP_DIR/$dir_or_file
    fi
  done

  echo Copied existing files to $BACKUP_DIR
  echo
}

setup_dotfiles() {
  for dir_or_file in ${DIRS_AND_FILES[@]}; do
    full_path=~/.$dir_or_file
    [ -f $full_path ] && rm $full_path
    [ -d $full_path ] && rm -rf $full_path
    mkdir -p $(dirname $full_path)
    ln -sv ~/dotfiles/$dir_or_file $full_path
  done
}

clone_or_pull() {
  git_repo_url=$1
  local_path=$2

  if [ -d $local_path ]; then
    pushd $local_path
    git pull --rebase
    popd
  else
    git clone $git_repo_url $local_path
  fi
}

iterm_preferences() {
  defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
  defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/dotfiles/iterm2"
  defaults write com.googlecode.iterm2.plist NSNavLastRootDirectory -string "/iterm2"
  defaults write com.googlecode.iterm2.plist NoSyncNeverRemindPrefsChangesLostForFile_selection -int 0
}

pre_brew_packages() {
  type brew || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

post_brew_packages() {
  /opt/homebrew/opt/fzf/install --key-bindings --completion --no-update-rc
}

brew_packages() {
  pre_brew_packages
  brew bundle
  post_brew_packages
}

setup_zsh() {
  brew install zsh

  oh_my_zsh_dir=~/.oh-my-zsh
  if [ -d $oh_my_zsh_dir ]; then
    installed=true
  fi
  [ "$installed" = true ] || sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
}

setup_dot_tmux() {
  clone_or_pull https://github.com/gpakosz/.tmux ~/.tmux
  pushd ~/
  ln -s -f .tmux/.tmux.conf
  [ -f .tmux/.tmux.conf.local ] || cp .tmux/.tmux.conf.local .
  popd
}

cargo_packages() {
    cargo install urlencode
}

option=${1}
if [ -z "${option}" ]; then
  brew_packages
  
  setup_zsh

  create_directories
  backup_existing_dotfiles
  setup_dotfiles

  setup_dot_tmux

  iterm_preferences
  cargo_packages
elif [ "${option}" = "dotfiles" ]; then
  create_directories
  backup_existing_dotfiles
  setup_dotfiles
fi

echo
echo "Done. Restart terminal to see the changes."
