#!/bin/bash

set -e

DIRS_AND_FILES=(bashrc bash_profile profile gitconfig gemrc tool-versions bash_it/custom/themes)
BACKUP_DIR=~/dotfiles.backup_existing_dotfiles.`date +%-H-%M-%S-%F`

create_directories() {
  mkdir -p $BACKUP_DIR
  mkdir -p $BACKUP_DIR/oh-my-zsh/custom
  mkdir -p $BACKUP_DIR/bash_it/custom
}

backup_existing_dotfiles() {
  for dir_or_file in ${DIRS_AND_FILES[@]}; do
    full_path=~/.$dir_or_file
    if [[ -f $full_path ]]; then
      cp $full_path $BACKUP_DIR/$dir_or_file
    elif [[ -d $full_path ]]; then
      mkdir -p $full_path
      cp -R $full_path/ $BACKUP_DIR/$dir_or_file
    fi
  done

  echo Copied existing files to $BACKUP_DIR
  echo
}

setup_dotfiles() {
  for dir_or_file in ${DIRS_AND_FILES[@]}; do
    full_path=~/.$dir_or_file
    [ -f $full_path ] && rm $full_path
    [ -d $full_path ] && rm -rf $full_path
    ln -sv ~/dotfiles/$dir_or_file $full_path
  done
}

setup_neovim() {
  # vim-plug installation
  vim_plug_url="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
  vim_plug_installation=~/.local/share/nvim/site/autoload/plug.vim
  [ -f $vim_plug_installation ] || curl -fLo $vim_plug_installation --create-dirs $vim_plug_url

  # neovim config
  nvim_dir=~/.config/nvim
  if [[ -d $nvim_dir ]]; then
    pushd $nvim_dir
    git pull --rebase
    popd
  else
    git clone https://github.com/arunvelsriram/neovim-dotfiles.git $nvim_dir
  fi

  # neovim plugin installation
  nvim +PlugInstall +qall

  # youcompleteme
  pushd $nvim_dir/plugged/youcompleteme
  ./install.py --clang-completer --go-completer --js-completer
  popd
}

iterm_preferences() {
  defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
  defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/dotfiles/iterm"
  defaults write com.googlecode.iterm2.plist NSNavLastRootDirectory -string "/iterm"
  defaults write com.googlecode.iterm2.plist NoSyncNeverRemindPrefsChangesLostForFile_selection -int 0
}

spectacle_shortcuts() {
  open /Applications/Spectacle.app
  sleep 5
  rm ~/Library/Application\ Support/Spectacle/Shortcuts.json
  ln -sv ~/dotfiles/spectacle/Shortcuts.json ~/Library/Application\ Support/Spectacle/Shortcuts.json
}

pre_brew_packages() {
  type brew || /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

post_brew_packages() {
  /usr/local/opt/fzf/install --key-bindings --completion --no-update-rc
}

brew_packages() {
  pre_brew_packages
  brew bundle
  post_brew_packages
}

install_cargo() {
  type cargo || curl -sSf https://static.rust-lang.org/rustup.sh | sh
}

install_cargo_packages() {
 type click || cargo install click
}

install_kube_fzf() {
  kube_fzf_path=~/.kube-fzf
  if [ -d $kube_fzf_path ]; then
    pushd $kube_fzf_path
    git pull
    popd
  else
    git clone https://github.com/arunvelsriram/kube-fzf $kube_fzf_path
  fi
}

install_kube_ps1() {
  rm -rf ~/.kube-ps1
  git clone https://github.com/jonmosco/kube-ps1.git ~/.kube-ps1
}

brew_packages

create_directories
backup_existing_dotfiles
setup_dotfiles

iterm_preferences
spectacle_shortcuts

install_cargo
install_cargo_packages
install_kube_fzf
install_kube_ps1
setup_neovim

echo
echo "Done. Restart terminal to see the changes."
